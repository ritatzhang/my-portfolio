{"ast":null,"code":"var _jsxFileName = \"/Users/ritazhang/Documents/self/my-portfolio/src/components/projects/wordposterproject.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport posterpic from \"../media/posterpic.png\";\n\nclass WordPosterProject extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"intro-grid\",\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }\n    }, \"the Little Word Poster\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }\n    }, \"For Build18 this year, our project idea is to build an interactive poster that would ultimately light up to say \\u201CYou are a [adjective] [noun],\\u201D with a set of adjectives and nouns that we will eventually pick. The headline of the poster would be constantly lit, saying \\u201CYou are a\\u201D. Then the rest of the phrase would be completed by a randomly chosen adjective paired with a randomly chosen noun, which would also light up. To activate a change in the pairing, a user would only need to make a sound (clap), smile, or touch a nearby sensor.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/irisdongg/Build18_2021\",\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-github\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: posterpic,\n      alt: \"mypic\",\n      className: \"spotifyplaylist-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"video-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      //id=\"poster-demo\"\n      className: \"videoTag\",\n      title: \"demo\",\n      src: \"https://drive.google.com/file/d/1ThSYeSAQ0xaNRx6QTxRIDyXL3XdEhkdE/preview\",\n      width: \"640\",\n      height: \"480\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default WordPosterProject;","map":{"version":3,"sources":["/Users/ritazhang/Documents/self/my-portfolio/src/components/projects/wordposterproject.js"],"names":["React","Component","Grid","Button","posterpic","WordPosterProject","render","width","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AACxCK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,OAAO,EAAE,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wjBAFF,eAaE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AACE,MAAA,IAAI,EAAC,2CADP;AAEE,MAAA,GAAG,EAAC,qBAFN;AAGE,MAAA,MAAM,EAAC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAG,MAAA,SAAS,EAAC,cAAb;AAA4B,qBAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFF,CAbF,CADF,CADF,eA4BE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEJ,SAAV;AAAqB,MAAA,GAAG,EAAC,OAAzB;AAAiC,MAAA,SAAS,EAAC,qBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA5BF,CADF,eAkCE;AAAK,MAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE;AACA,MAAA,SAAS,EAAC,UAFZ;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,GAAG,EAAC,2EAJN;AAKE,MAAA,KAAK,EAAC,KALR;AAME,MAAA,MAAM,EAAC,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlCF,CADF;AA+CD;;AAjDuC;;AAoD1C,eAAeC,iBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport posterpic from \"../media/posterpic.png\";\n\nclass WordPosterProject extends Component {\n  render() {\n    return (\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\n        <Grid className=\"intro-grid\" columns={2}>\n          <Grid.Column>\n            <div className=\"project-text\">\n              <h1>the Little Word Poster</h1>\n              <p>\n                For Build18 this year, our project idea is to build an\n                interactive poster that would ultimately light up to say “You\n                are a [adjective] [noun],” with a set of adjectives and nouns\n                that we will eventually pick. The headline of the poster would\n                be constantly lit, saying “You are a”. Then the rest of the\n                phrase would be completed by a randomly chosen adjective paired\n                with a randomly chosen noun, which would also light up. To\n                activate a change in the pairing, a user would only need to make\n                a sound (clap), smile, or touch a nearby sensor.\n              </p>\n              <div className=\"project-links\">\n                {/* github */}\n                <a\n                  href=\"https://github.com/irisdongg/Build18_2021\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <i className=\"fa fa-github\" aria-hidden=\"true\" />\n                </a>\n              </div>\n            </div>\n          </Grid.Column>\n\n          <Grid.Column>\n            <img src={posterpic} alt=\"mypic\" className=\"spotifyplaylist-img\" />\n          </Grid.Column>\n        </Grid>\n\n        <div class=\"video-wrapper\">\n          <iframe\n            //id=\"poster-demo\"\n            className=\"videoTag\"\n            title=\"demo\"\n            src=\"https://drive.google.com/file/d/1ThSYeSAQ0xaNRx6QTxRIDyXL3XdEhkdE/preview\"\n            width=\"640\"\n            height=\"480\"\n          ></iframe>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WordPosterProject;\n"]},"metadata":{},"sourceType":"module"}